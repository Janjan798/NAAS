{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api'; // Backend runs on port 5000\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async (username, password) => {\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","username","password","post","data","setItem","JSON","stringify","user","logout","getCurrentUser","parse"],"sources":["C:/swe prok/naas/naas-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';  // Backend runs on port 5000\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to add the auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authService = {\r\n  login: async (username, password) => {\r\n    const response = await api.post('/auth/login', { username, password });\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    }\r\n    return response.data;\r\n  },\r\n  \r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  },\r\n\r\n  getCurrentUser: () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAE;;AAE9C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMV,QAAQ,GAAG,MAAMf,GAAG,CAAC0B,IAAI,CAAC,aAAa,EAAE;MAAEF,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACtE,IAAIV,QAAQ,CAACY,IAAI,CAACnB,KAAK,EAAE;MACvBC,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEb,QAAQ,CAACY,IAAI,CAACnB,KAAK,CAAC;MAClDC,YAAY,CAACmB,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACf,QAAQ,CAACY,IAAI,CAACI,IAAI,CAAC,CAAC;IAClE;IACA,OAAOhB,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDK,MAAM,EAAEA,CAAA,KAAM;IACZvB,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDe,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMF,IAAI,GAAGtB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOqB,IAAI,GAAGF,IAAI,CAACK,KAAK,CAACH,IAAI,CAAC,GAAG,IAAI;EACvC;AACF,CAAC;AAED,eAAe/B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}